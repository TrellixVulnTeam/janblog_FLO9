{"version":3,"file":"app.js","sources":["../lib/app.ts"],"names":[],"mappings":"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","sourcesContent":["import {Inject, InjectionToken, ModuleWithProviders, NgModule, NgZone, Optional} from '@angular/core';\r\nimport {LIB_KEY, LIB_KEY_CASE_SENSITIVE, LIB_KEY_SEPARATOR} from './constants/lib';\r\nimport {STORAGE} from './enums/storage';\r\nimport {LocalStorageService, SessionStorageService} from './services/index';\r\nimport {WebStorageHelper} from './helpers/webStorage';\r\nimport {IWebstorageConfig, WebstorageConfig} from './interfaces/config';\r\nimport {KeyStorageHelper} from './helpers/keyStorage';\r\nimport {StorageObserverHelper} from './helpers/storageObserver';\r\n\r\nexport * from './interfaces/index';\r\nexport * from './decorators/index';\r\nexport * from './services/index';\r\n\r\nexport const WEBSTORAGE_CONFIG = new InjectionToken('WEBSTORAGE_CONFIG');\r\n\r\n@NgModule({\r\n\tdeclarations: [],\r\n\tproviders: [SessionStorageService, LocalStorageService],\r\n\timports: []\r\n})\r\nexport class Ng2Webstorage {\r\n\r\n\tstatic forRoot(config?:IWebstorageConfig):ModuleWithProviders {\r\n\t\treturn {\r\n\t\t\tngModule: Ng2Webstorage,\r\n\t\t\tproviders: [\r\n\t\t\t\t{\r\n\t\t\t\t\tprovide: WEBSTORAGE_CONFIG,\r\n\t\t\t\t\tuseValue: config\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\tprovide: WebstorageConfig,\r\n\t\t\t\t\tuseFactory: provideConfig,\r\n\t\t\t\t\tdeps: [\r\n\t\t\t\t\t\tWEBSTORAGE_CONFIG\r\n\t\t\t\t\t]\r\n\t\t\t\t}\r\n\t\t\t]\r\n\t\t};\r\n\t}\r\n\r\n\tconstructor(private ngZone:NgZone, @Optional() @Inject(WebstorageConfig) config:WebstorageConfig) {\r\n\t\tif(config) {\r\n\t\t\tKeyStorageHelper.setStorageKeyPrefix(config.prefix);\r\n\t\t\tKeyStorageHelper.setStorageKeySeparator(config.separator);\r\n\t\t\tKeyStorageHelper.setCaseSensitivity(config.caseSensitive);\r\n\t\t}\r\n\r\n\t\tthis.initStorageListener();\r\n\t\tStorageObserverHelper.initStorage();\r\n\t}\r\n\r\n\tprivate initStorageListener() {\r\n\t\tif(typeof window !== 'undefined') {\r\n\t\t\twindow.addEventListener('storage', (event:StorageEvent) => this.ngZone.run(() => {\r\n\t\t\t\tlet storage:STORAGE = window.sessionStorage === event.storageArea ? STORAGE.session : STORAGE.local;\r\n\t\t\t\tif(event.key === null) WebStorageHelper.refreshAll(storage);\r\n\t\t\t\telse WebStorageHelper.refresh(storage, event.key);\r\n\t\t\t}));\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport function provideConfig(config:IWebstorageConfig):WebstorageConfig {\r\n\treturn new WebstorageConfig(config);\r\n}\r\n"]}